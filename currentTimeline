Currently

- Need To:
    -Parse ARFF File Properly ** d
    ^questions
      ?how to "create" clusters data structure
      ?what data do i need to read in other then points
        ie is each cluster its own file or is it one single arff File
        AND as such how do i properly parse the information i require

      ?do i create the cluster data structures after parsing the file
      technically do i algoritmically create then and then output each
      cluster to a different text file.

    -Simulate Server Requests
    ^questions
      ?is this just a time delay between user actually seeing data or
      is this me re reading new data from a text file and that in theory
      simulates a server ping wait

    -Update GUI
      ^questions
      ?am i just entering my current location or am i wanting to pretend
      that my point is moving and therefore take user input in the form of
      a incrementing location and not just entering my location
      //easy enough to change how this functionality is implemented now that i
      have the groundwork laid
      ?what information do i need to display
      ?

    -Re-Empliment MBR
      ^
      -Convert C++ code to java.
      -Will check user inputted x and y against boundaries of the mbr to decide
      if the users location is within the MBR.
      //technically very basic function call BUT need to figure out file parsing
      as listed above before implemtation continues

    -Current functionality
      March 16 2020
       1) Closest Point: Can find closest point (x',y') to a given (x,y) coordinate
       2) User Interface: Basic groundwork of a GUI where
        -Input: User inputs x and inputs y in two boxes and presses submit
        -//program locates closest point from a given txt(to be change to arff)
        -Output: Closest point to given x and y
      3) Data Structure "Coordinates"
        -Contains two <double> Vectors: x, y
        -Cluster would be implemented as a "Coordinates" object
      4) //INPROG Parser
        -Parses and converts file lines
        ei
        12.0, 41.9
        reads into coordinate object for x and y respectively
